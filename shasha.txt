This review has been published in Computing Reviews.


Natural computing : DNA, quantum bits, and the future of smart machines
Lazere C., Shasha D., W. W. Norton&Company, New York, NY, 2010. 288 pp.  Type: Book

Date Reviewed: Oct 4 2010			


There are many possible approaches to natural computing--computing inspired by nature--and Lazere and Shasha’s new book gives a good overview of all of them. Using the successful formula of their previous book [1], they do this by telling the stories of some of the main players in the field. The stories are directed to the interested layman, but to get the most out of the technical explanations, you have to be somewhat of a techie; however, even if you aren’t a techie, the personal storytelling, which so nicely combines the technical focus of the book with the personal fascinations of the players, will still impress you with the natural computing field’s main themes and challenges.

When we think about nature, one of the first things that may come to mind is evolution. Indeed, the first few chapters of the book are devoted to adaptive computing. When trying to instruct the computer to solve difficult problems, we can take inspiration from similar problems that have been solved by nature. To design a Mars rover, we can take inspiration from how insects manage to crawl over rough and unknown terrain. To design a robust complex system, such as a nuclear power plant on the Moon, we can take inspiration from how complex organisms in nature co-evolve under an interacting and changing environment. Today, such evolutionary algorithms are fairly well known in computer science (CS), but they are normally presented as alternative approaches to solving classical, difficult CS problems--for example, the traveling salesman problem. To be honest, these approaches do not always deliver on their promise. In contrast, it was refreshing to learn from this book that quite different applications of evolutionary algorithms are possible in the area of manufacturing design, where a huge space of possible configurations has to be explored.

In the second part of the book we learn how nature suggests novel ways of actually building computers. Although this part of the book is the most science fiction-like, what has already been accomplished in this domain is very real! The chapters on Ned Seeman and Paul Rothemund talk about using DNA to encode and store information, and then using techniques from biotechnology to manipulate that information. This discipline, known as DNA computing or DNA nanotechnology, is a radical departure from our conventional silicon-based computer architectures. The chapter on Steve Skiena even considers the possibilities of reprogramming existing viruses and synthesizing entirely new ones that perform beneficial, rather than harmful, functions. There are also chapters on building and organizing massively parallel computers, inspired by the massively parallel workings of multicellular organisms.

The final part of the book looks more closely at the interplay between computing and the fundamental natural science that is physics. There is a good chapter on quantum computing that clarifies a lot of the fuss that surrounds this topic. There are also chapters on building special-purpose, ultra-fast computers. Personally, I was the most fascinated with the chapter on Jonathan Mills, an analog computing researcher. As John von Neumann noted, a huge obstacle for conventional digital computers is that, to simulate or predict the behavior of a physical system, even confined to a finite space and a finite time interval, an infinite number of elementary logical operations must be performed. The fascinating idea is to build another more easily measured physical system that simulates the system--say, the working of the human brain or the complicated folding of proteins--we want to understand. The challenge in this respect is to build an analog computer that is programmable so that a multitude of types of systems can be simulated.

Along the way, the book recounts numerous entertaining anecdotes and presents nice photographs of all the major players. Moreover, it includes boxes that give background into specific phenomena, such as nondeterministic polynomial-time (NP) completeness and the bonding of DNA strands. The authors also make the convincing case for parallel programming languages, such as K and APL, which seem indispensable when it comes to making effective use of the new generation of computer architectures. For those who want to know more about a specific idea mentioned, the authors provide references to the scientific literature. Finally, although the book is not meant to be a reference work, it contains an extensive index. While I did not use the index during my first reading, I expect it will prove very useful in the future when I want to revisit a certain topic.


Reviewer:  Jan Van den Bussche	Review #: CR138438

1)	Shasha, D.; Lazere, C. Out of their minds: the lives and discoveries of 15 great computer scientists. Copernicus, New York, NY, 1995.